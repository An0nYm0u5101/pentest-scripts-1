#!/bin/bash

# Horizontal Domain Correlation
# Find all possible domains

curl_agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36"
day="$(date +%Y%M%d)"
emails=($(whois "$1" | grep -E "Registrant Email|^e-mail" | egrep -ho "[[:graph:]]+@[[:graph:]]+"))
html2text_bin=$(command -v html2text)
domains_found_file=./"$1"_hdc_found_"${day}".txt
domains_alive_file=./"$1"_hdc_alive_"${day}".txt

if [ -z $(command -v html2text) ]; then
    tput setaf 1; echo -e "Please, install html2text with:"
    tput setaf 7; echo "    pip install html2text"
    exit 1
fi

tput setaf 4; echo "Finding domains..."
tput setaf 7;

for email in "${emails[@]}"; do

    # Domain Eye is a paid service, if you have an access
    # and would like to collaborate please PR
    # https://domaineye.com/reverse-whois/
   
    domains_reversewhois=($(curl -sk "https://www.reversewhois.io/?searchterm=${email}" | \
        "${html2text_bin}" | grep -E "^[0-9]"| awk '{print $2}' | sed 's/|//'))
    domains_found+=("${domains_reversewhois[@]}")

    domains_viewdns=($(curl -s -A "${curl_agent}" "https://viewdns.info/reversewhois/?q=${email}" | "${html2text_bin}" | \
        grep -Po "[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)" | \
        grep -Evi "viewdns|${email}"))
    domains_found+=("${domains_viewdns[@]}")

done

if [ ${#domains_horizontal[@]} -gt 0 ]; then
    domains_horizontal+=($(echo ${domains_found[@]} | tr ' ' '\n' | sort -u))
    printf "%s\n" "${domains_horizontal[@]}" | tee -a "${domains_found_file}"
else
    tput setaf 1; echo "No domains found, exiting!"
    exit 1
fi

# Finding valid domain (that have valid A record).
# After that domains without A record will be rechecked$

tput setaf 4; echo "Domains validation (DNS requests)..."

for d in ${domains_horizontal[@]}; do
    if [[ $(dig "${d}" +short +time=5 +tries=3 @8.8.8.8 | wc -c) -eq 0 ]]; then
        tput setaf 1;  echo -n "Invalid domain: "
        tput setaf 7; echo "${d}"
    else
        tput setaf 3; echo -n "Valid domain: "
        tput setaf 7; echo "${d}"
        echo "${d}" >> "${domains_alive_file}"
    fi
done
