#!/bin/bash

[[ "$EUID" -ne 0 ]] && echo "Please run this with sudo or root!" && exit 1
[[ "$#" -ne 1 ]] && echo "Please specify an user!" && exit 1

if ! grep -E "^$2" /etc/passwd | awk -F ":" '{print $1}' > /dev/null || \
    [[ ! -d $(grep -E "^${user}" /etc/passwd | awk -F ":" '{print $6}') ]]; then
    echo "Specify a valid user!"
    exit 1
else
    user_home=$(su - "$2" -c "echo \${HOME}")
fi

echo -n "Creating some aliases and functions... "
if su - "${USER}" -c "cp ${user_home}/.bashrc ${user_home}/.bashrc-$(date +%Y%m%d)"; then

    # NMAP NSE Search
    if ! grep -Eq "^nsesearch\(\){" "${user_home}/.bashrc" > /dev/null 2>&1; then
echo -e "nsesearch() {
    if [ $# == 1 ]; then
        find /usr/share/nmap/scripts/ | grep \$1
    fi       
}" >> "${user_home}/.bashrc"
    fi

    # TOR start and stop                                                                           
    if ! grep -Eq "^start-tor\(\){" "${user_home}/.bashrc" > /dev/null 2>&1; then

echo -e "start-tor(){
    docker run -d --rm --name \"local-tor\" -p \"8118:8118\" -p "9050:9050" -p "9040" privoxy > /dev/null
    proxy_ip=\$(docker inspect --format '{{ .NetworkSettings.IPAddress }}' \"local-tor\")
    while [ -z \"\${Congratulations}\" ]; do
        Congratulations=\$(curl -m 2 -s --proxy \"\${proxy_ip}:8118\" 'https://check.torproject.org/' 2> /dev/null | grep -m1 \"Congratulations\" | awk '{print $1}')
    done
    echo \"${proxy_ip}\"
}\n" >> "${user_home}/.bashrc"

    fi

    if ! grep -Eq "^stop-tor\(\){" "${user_home}/.bashrc" > /dev/null 2>&1; then

echo -e "stop-tor(){
    docker stop \"local-tor\"
}\n" >> "${user_home}/.bashrc"            
        
    fi

    # Websearch
    if ! grep -Eq "^websearch\(\){" "${user_home}/.bashrc" > /dev/null 2>&1; then

echo -e "websearch(){
    web_extensions=7z,asp,asp~,aspx,aspx~,backup,bak,bkp,cache,cgi,conf,config,csv,db,html,htmlx,inc,jar,js,json,jsp,jsp~,lock,log,old,php,php~,py,py~,rar,rb,rb~,shtml,sql,sql~,sql.gz,sql.tar.gz,sql.zip,swp,swp~,tar,tar.bz2,tar.gz,txt,wadl,xml,zip
    if [ \$# -ne 3 ]; then
        echo \"Please at least three arguments, binary (dirsearch or gobuster), url and wordlist!\"
    elif [ \$(curl -o /dev/null -s -w \"%{http_code}\" \"\$2\") -ne 200 ]; then
        echo \"Please, specify a valid url.\"
        echo \"The second argument here must be a url.\"
    elif [ ! -s \"\$3\" ]; then
        echo \"Please, specify a valid wordlist.\"
        echo \"The third argument here must be a wordlist file.\"
    elif [ \"\$1\" == \"dirsearch\" ]; then
        dirsearch -t 100 --random-user-agents -t 100 -e \"\${web_extensions}\" -w \"\$3\" -u \"\$2\"
    elif [ \"\$1\" == \"gobuster\" ]; then
        gobuster dir -z -k -t 100 -x \"\${web_extensions}\" -w \"\$3\" -u \"\$2\"
    else
        echo \"Please, specify a valid binary!\"
        echo \"I recognize just dirsearch or gobuster!\"
    fi
}\n" >> "${user_home}/.bashrc"

    fi
    
    # Finish the script
    echo "Done!"
fi
